{
    "contents" : "# library\nlibrary(raster)\nlibrary(spemd)\nlibrary(raster)\nlibrary(MBA)\nlibrary(spdep)\nlibrary(FNN)\n\n#rst <- \"/home/jds/Temp/clip/n45_w074_clip3.tif\"\n\nwd <- \"/home/jds/Documents/Data/Altimetrie/srtm\"\nrst <- \"n45_w072_1arc_v3_z01_buffer_srtm_extract.tif\"\n\nfiles <- list.files(path = wd , pattern = \"1arc_v3_z01_buffer_srtm_extract.tif\")\nfor ( i in 1: length(files)){\n\nrst <- files[i]\nrst_in <- basename(rst)\ninPath <- wd\nrst_name <- unlist(strsplit(x = rst_in, split = \"\\\\.\"))[1]\next <- unlist(strsplit(x = rst_in, split = \"\\\\.\"))[2]\n\nif(!exists(\"outPath\")){\n  outPath <- inPath\n}\nrst_out <- paste0(outPath,'/',rst_name, '_imf1.', ext)\n\n# read raster\nr <- raster(paste0(wd,\"/\",rst_in))\n\n\n# create sp object\nrxy <- as.data.frame(xyFromCell(r, 1:ncell(r)))\nrxy$z <- r[]\n\nrxy_na <- rxy\nrxy_na[is.na(rxy)] <- -99999\ncoordinates(rxy_na) <- ~x+y\ngridded(rxy_na) <- TRUE\n\n\nRprof(\"profiling.out\",line.profiling = TRUE)\n### Your code ###\n\n\n# Empirical decomposition\ntini1 <- proc.time()\nres.ncp <- spEMD(rxy_na, zcol = \"z\",\n                 method = \"splines\",\n                 n.imf.max = 1,\n                 thresh.extrema = 0.1,\n                 verbose = TRUE,\n                 nb.nn = 6,\n                 save_neig = FALSE)\ntfin1 <- proc.time()\ntfin1 - tini1\nRprof()\nsummaryRprof(\"profiling.out\", , lines=\"show\")\n\n# save raster\nwriteRaster(raster(res.ncp['imf1']),filename = rst_out)\ncat('---- spEMD is done.')\n}\n",
    "created" : 1487130156181.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3378531205",
    "id" : "2836B6B3",
    "lastKnownWriteTime" : 1487919199,
    "path" : "~/Script/R/spemd2/spemd/inDev/exemple-raster-optim.R",
    "project_path" : "inDev/exemple-raster-optim.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}