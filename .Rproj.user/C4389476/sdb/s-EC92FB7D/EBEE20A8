{
    "contents" : "#' @title create.neig\n#' @aliases  create.neig\n#' @author Pierre Roudier\n#' @description Initiates the neighbourhood relationships between the points in the processed data set\n#' @import sp spdep, FNN\ncreate.neig <- function(\n  data.set,\n  # gridded.data,\n  nb.nn = 4,\n  duplicate='remove',\n  verbose = FALSE\n){\n  coords <- as.data.frame(coordinates(data.set))\n  names(coords) <- c(\"x\",\"y\")\n\n  # if (TRUE) {\n  #   if (gridded.data){\n\n\n  # Finding nearest neighbours\n  #  original code\n  #### data.set.nn <- knearneigh(as.matrix(coords),k=nb.nn,longlat=FALSE)\n  #### Converting to nb object\n  #### data.set.nb <- knn2nb(data.set.nn)\n\n  # Converting to nb object\n  kn <-  knn.index(coords, k=nb.nn)\n  knnObj <- list(nn=kn, np = nrow(coords), k = nb.nn, dimension = 2, x = coords[,1:2] )\n  class(knnObj) <- \"knn\"\n\n  # calculate neighboor\n  data.set.nb <- knn2nb(knnObj)\n  neig <- list(NULL)\n  neig$x <- coords[,1]\n  neig$y <- coords[,2]\n  neig$n <- nrow(coords)\n  neig$neig <- data.set.nb\n\n  # }\n  # else {\n  #   require(tripack)\n  #   if (verbose) cat(\"\\t\\tGenerating neighbourhood relationships...\\n\")\n  #   # Creating a triangulation\n  #   if (verbose) cat(\"\\t\\t\\tTriangulation of the data set...\\t\")\n  #   neig <- tri.mesh(coords,duplicate=duplicate)\n  #\n  #\n  #   if (TEST <- TRUE) {\n  #     source(\"pruned_neig.R\")\n  #     require(rgeos)\n  #     require(rgdal)\n  #     bound.shp <- \"/home/pierre/Documents/Travail/ACPA/Data/Hassall/swamp/boundary/Swamp.shp\"\n  #     bound <- readOGR(\"/home/pierre/Documents/Travail/ACPA/Data/Hassall/swamp/boundary/Swamp.shp\", layer=\"Swamp\")\n  #     if (verbose) cat(\"tri.asSplines\\n\")\n  #     neig.sl <- tri.asSpLines(neig)\n  #     if (verbose) cat(\"gCrosses\\n\")\n  #     out <- gCrosses(neig.sl,bound,byid=TRUE)\n  #     neig <- neig.sl[!out,]\n  #     if (verbose) cat(\"sapply\\n\")\n  #     id.neighbours <- t(sapply(row.names(neig), function(x){as.numeric(unlist(strsplit(x, \" \")))},USE.NAMES=FALSE))\n  #     if (verbose) cat(\"getNeig\\n\")\n  #     my.neig <- getNeig(id.neighbours)\n  #     if (verbose) cat(\"ok\\n\")\n  #     neig <- list()\n  #     neig$neig <- my.neig\n  #     neig$x <- coords[,1]\n  #     neig$y <- coords[,2]\n  #     neig$n <- nrow(coords)\n  #     class(neig) <- \"neig\"\n  #   }\n  #\n  #   if (verbose) cat(\"Done.\\n\")\n  #   # Adding neighbours informations\n  #   if (verbose) cat(\"\\t\\t\\tConverting to neighbourhood object...\\t\")\n  #   if (!TEST) neig$neig <- neighbours(neig)\n  #   if (verbose) cat(\"Done.\\n\")\n  # }\n\n  class(neig) <- c(class(neig),\"neig\")\n\n  return(neig)\n}\n",
    "created" : 1487954801710.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1711819070",
    "id" : "EBEE20A8",
    "lastKnownWriteTime" : 1487954886,
    "path" : "~/Script/R/spemd2/spemd/R/create_neig.r",
    "project_path" : "R/create_neig.r",
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "type" : "r_source"
}