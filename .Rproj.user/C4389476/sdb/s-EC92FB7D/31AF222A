{
    "contents" : "#' @title extrema.irr\n#' @aliases  extrema.irr\n#' @author Pierre Roudier\n#' @description Finds regional extrema on a irregularly sampled data set\n#' @include create_neig.r\nextrema.irr <- function(\n  data.set,\n  gridded.data,\n  neig = NULL,\n  zcol = 'z',\n  duplicate = 'remove',\n  nb.nn = 4, # Number of nearest neighbours to take into account if data is on a grid\n  thresh.extrema = 1, # Significative threshold for the extrema\n  verbose = FALSE\n){\n\n  if (is.null(neig)) {\n    cat(\"\\t\\tWARNING : Old-style neig generation. This might be time-consuming.\\n\")\n    neig <- create.neig(\n      data.set,\n      gridded.data = gridded.data,\n      nb.nn = nb.nn,\n      duplicate = 'remove',\n      verbose = verbose\n    )\n  }\n  else {\n\n    if (!any(class(neig) != \"neig\")) stop(\"neig needs to be generated through the create.neig function.\")\n\n  }\n\n  # Adding the value attribute\n  neig$value <- data.set[[zcol]]\n\n  # Adding some extrema attributes\n  neig$is.minima <- vector(mode='logical',length = neig$n)\n  neig$is.maxima <- vector(mode='logical',length = neig$n)\n\n  # Initialisation\n  k <- 1\n\n  # For each point of the triangulation object\n  for (i_point in (1:neig$n)) {\n\n    candidat <- 0\n    amplitude.max <- 0\n    voisins <- neig$neig[[i_point]]\n\n    for (i_voisin in (1:length(voisins))){\n\n      i_voisin_curr <- voisins[i_voisin]\n      amplitude <- neig$value[i_point] - neig$value[i_voisin_curr]\n      if (amplitude < 0) candidat <- candidat - 1\n      if (amplitude > 0) candidat <- candidat + 1\n      if (abs(amplitude) > abs(amplitude.max)) amplitude.max <- amplitude\n\n      k <- k+1\n    }\n\n    if ((abs(amplitude.max) >= thresh.extrema) && (candidat == -1*length(voisins))) {\n      neig$is.minima[i_point] <- TRUE\n    }\n\n    if ((abs(amplitude.max) >= thresh.extrema) && (candidat == length(voisins))) {\n      neig$is.maxima[i_point] <- TRUE\n    }\n\n  }\n\n  if (verbose) {\n    n.extrema <- length(which(neig$is.minima)) + length(which(neig$is.maxima))\n    cat(paste('\\t\\t\\tFound ',n.extrema,' extrema points (',length(which(neig$is.minima)),' minima, ',length(which(neig$is.maxima)),' maxima)\\n',sep=''))\n  }\n\n  class(neig) <- c(class(neig),\"extrema\")\n\n  return(neig)\n}\n",
    "created" : 1487916195011.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3332705040",
    "id" : "31AF222A",
    "lastKnownWriteTime" : 1487914270,
    "path" : "~/Script/R/spemd2/spemd/inDev/extrema_irr-old-ori.r",
    "project_path" : "inDev/extrema_irr-old-ori.r",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "type" : "r_source"
}